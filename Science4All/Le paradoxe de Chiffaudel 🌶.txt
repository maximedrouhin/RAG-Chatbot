le suprême fasciste refait des siennes il a à nouveau capturer une infinité de lapin il émet à nouveau au défi cette fois chaque lapin arrive tour à tour de la droite à l'arrivée du premier lapin le suprême fasciste coiffe celui ci un chapeau qu'il choisit être de couleur blanche ou noire ce lapin doit ensuite deviner la couleur de son chapeau et il peut bien sûr avoir juste ou tort puis un second lapin rives toujours de la droite il est lui aussi coiffé d'un chapeau qui peut être blanc ou noir il voit le premier lapin ainsi que la couleur du chapeau du premier lapin les lapins n'ont pas le droit de communiquer néanmoins le second lapin doit alors deviner la couleur de son chapeau et là encore il peut avoir raison où il peut commettre une erreur puis un troisième lapin arrive à son tour sera à nouveau coiffé d'un chapeau choisi par le suprême fasciste voit lui aussi tous les lapins avant lui et les couleurs de tous leurs chapeaux et ce troisième lapin doit à son tour deviner la couleur de son propre chapeau puis un quatrième n'a pas arrive puis africaine et ainsi de suite et lapins peuvent se coordonner au préalable avant le défi et ainsi préparer une stratégie pour minimiser le nombre d'erreurs mais ils sont prévenus s'ils effectuent une infinité d'erreur alors le suprême fascistes les tuera tous réécrire à tous les livres d'informatique en langage fortran regardez pas les gars mais est-ce qu'il ya moyen de relever le défi d'une suprême fasciste que doivent faire les lapins qu'en pensez vous quel pari feriez vous pariez vous sur le suprême fascistes ou sur les lapins alors pour préciser la question va admettre et si la thèse de church turenne c'est à dire le fait que dans le monde du suprême fascistes et des lapins il est impossible de faire des calculs que les machine de turing ne peuvent pas faire en particulier du coup à la fois le suprême fasciste et les lapins doit suivre les règles du calcul ils ne peuvent qu appliquer des algorithmes dans ce cas et lapins peuvent-ils concevoir une stratégie calculable capable de battre le suprême fasciste à coup sûr alors pour la petite histoire ce paradoxe m'a été proposé par le mathématicien yan shi faudel pour mieux illustrer les enjeux les capacités et les limites des algorithmes d'ailleurs lui aussi à une super chaîne youtube et ce paradoxe de chiffres dalle est vraiment un problème super chouette pour mieux comprendre les enjeux du calcul donc je vous invite à le méditer qui tu supprimes fascistes et des lapins battre à l'autre les lapins pour ont-ils sauvé l'informatique de la forte rend pokal ips et bien si je le paradoxe c'est qu'il existe deux arguments qui ont l'air convaincant mais qui se contredisent mutuellement du coup je vais vous présenter les deux arguments et je vous laisse trouver lequel et palacio et en particulier où résident l'erreur de raisonnement et on va commencer par le premier argument qui est un argument pro lapin l'argument pro lapin repose sur la remarque suivante dans un monde régi par la thèse de church turing le suprême fasciste doit forcément appliqué un algorithme pour déterminer la couleur des chapeaux attribués aux lapins alors certes il ya une infinité d'algorithmes que suprême fasciste pourrait utiliser cependant cet infini et dénombrable autrement dit il est possible de lister tous les algorithmes que le suprême fasciste pourraient être amenés à utiliser on peut commencer par tous ceux qui s'écrivent en une ligne dans le langage python ou fortran pour ceux qui veulent vraiment se prendre la tête puis tout ce qui s'écrit vent de ligne puis en trois lignes et ainsi de suite ensuite chaque lapin va commencer en haut de sa liste d'algorithmes et si les prédictions de l'algorithme sont cohérentes avec ses observations me lapp on va suivre la prédiction de l'algorithme pour la couleur de son chapeau dans le cas contraire le lapin c'est que l'algorithme qui vient d'analyser n'est pas chez lui je supprime pas chic c'est le règne donc de sa liste et passez au suivant et dès qu'il tombe sur un algorithme enfin cohérent avec toutes ces observations il fait la prédiction faite par cet algorithme au sujet de la couleur de son propre chapeau l'argument pro lapin affirme alors que ce faisant les lapins seront au plus un nombre fini erreur vous voyez pourquoi l'argument clé pro lapin elle fait que l'algorithme du suprême fasciste appartient nécessairement à la liste des algorithmes des lapins maj on qui soit le 42 milliardième algorithmes de la liste ce qui se bat c'est qu'à chaque erreur un enfant au moins un algorithme précédent le 42 milliardième algorithmes de la liste est barrée du coup et lapins feront au plus 42 milliards terreur avant d'en arriver et 42 milliards dia algorithmes des likes met alors à partir de ce moment là toutes les prédictions correspondront exactement au processus de prise de décisions du suprême fasciste les lapins ne feront plus aucune erreur ainsi les lapins sont garantis de faire au plus 40 2 milliards d' erreur ils auront relevé le défi du suprême fasciste et les livres d'informatique auront échappé aux fortran pokal ips convaincu peut-être pas si vite oui car on peut aussi présenter un argument proxy prime fasciste non pas et que ce soit un argument en faveur du suprême fascisme vous dire c'est un argument qui montre comment le suprême fascisme peut être garantie de gagner uniquement dans le cadre de ce problème mathématique en question je ne suis pas super mais ne s'agit absolument pas de défendre de suprême fascisme de façon absolue je suis pas un pro suprême fasciste bref j'espère que vous est ce que je veux dire quoi qu'il en soit l'argument proches comme fasciste et le suivant en finale avec leurs histoires de liste d'algorithmes les lapins ne font qu'appliquer un algorithme eux aussi sorte de méta algorithmes si on veut mais ce méta algorithme est lui-même un algorithme du coup le suprême fasciste peut effectuer les calculs de cet algorithme ce qui lui permet de prédire la prédiction des lapins mais alors pour faire perdre les lapins à chaque prédictions il suffit aux suprêmes fasciste de mettre un chapeau de couleur opposée à la prédiction que feront les lapins vous voyez ce que je veux dire si le suprême fasciste c'est qu'elle algorithmes les lapins utilise alors il peut tout simplement lui-même appliquer un algorithme qui fait tout le temps l'opposé de l'algorithme des lapins mais alors si le suprême fasciste applique cet algorithme les lapins seront voués à ne faire que des erreurs et en particulier sans frais donc une infinité alors vous avez peut-être envie de dire que pour y arriver le suprême fasciste doit connaître l'algorithme des lapins et oui en effet mais ce n'est pas là que réside le paradoxe le paradoxe c'est que les lapins semblait avoir une stratégie qui leur garantissait la victoire or ou bien d'imaginer un cas où la stratégie des lapins et choix mais alors qu'en est il les lapins peuvent-ils vraiment concevoir une stratégie qui leur garantit la victoire ou est-ce que l'argument pro lapin est fallacieux et il existe une faille dans la stratégie pro lapin qu'en pensez vous sur quoi parier vous je vous invite vivement à faire pause et à réfléchir à ce problème en particulier notre raisonnement montre que l'argument pro lapin ou l'argument pro suprême est fallacieux je vous invite vivement à essayer de déterminer par vous même lequel des deux est un sophisme fallacieux et en particulier où se situent les erreurs de raisonnement allez je vous laisse encore dix secondes pour mettre pause ok on va passer la solution et se trouve que l'argument fallacieux et l'argument pro la part non les lapins ne peuvent pas concevoir une stratégie algorithmique qui leur garantit la victoire est ce que vous voyez pourquoi le problème réside dans le fait de lister tous les algorithmes et plus précisément de liste et algorithmique mans tous les algorithmes que le suprême fasciste peut être amené à utiliser où il car pour mettre des chapeaux à l'infinité des lapins à venir le suprême fasciste doit s'assurer que pour tous lapin son algorithme fournira une réponse à quelques couleurs de chapeau donner à ce lapin et du cou l'algorithme du suprême fasciste doit toujours terminer quel que soit le lapin est donc idéalement la liste des algorithmes des lapins doit contenir exactement l'ensemble des algorithmes qui termine tout le temps quel que soit le énième l'a pas à quoi fait alors on pourrait se dire que ce n'est pas si grave c'est la liste contient des algorithmes et qui peuvent ne pas terminer il suffit par exemple d'enlever un algorithme des convois qui ne termine pas en fait si c'est un problème et même un gros problème car au moment de faire leurs prédictions les lapins doivent barrer les algorithmes et qui sont incohérents avec les observations et pour déterminer c'est un algorithme est cohérent ou non avec les observations les lapins doivent lancer les calculs de ses algorithmes cependant certains de ces calculs risque d'être lancé et de tourner indéfiniment le problème c'est que pendant que l'algorithme tourner il sera impossible de savoir si c'est parce qu'il est juste trop long qui va terminer mais bon ça prend du temps ou si c'est parce que l'algorithme ne terminera jamais en particulier s'ils ne terminera jamais on pourrait ne jamais le savoir et attendre jusqu'à la nuit des temps sans jamais conclure qu'il ne fallait pas considérer cet algorithme dans notre liste en fait le problème de la ré introduit par alan turing montre qu'il est impossible de prédire aygo rythmiquement pour tout algorithmes de la liste si cet algorithme va terminer ou non c'est ce qu'on appelle l'un calculabilité du problème de l'art est une conséquence très bizarre de 7,1 calculabilité c'est qu'il est algorithmique mans impossible de construire une liste de tous les algorithmes qui termine toujours une telle liste est en fait incalculable comme le nombre de taixing dont on a parlé dans l'épisode précédent alors pour ceux parmi vous qui ont été bercés dès le biberon à la théorie des ensembles ça peut paraître très bizarre après tout la liste de tous les codes algorithmique et dénombrable un ensemble east aurait donc envie de crier que le sous-ensemble des code algorithmique dont l'exécution termine toujours est lui aussi dénombrable est bien loin ce sous-ensemble n'est pas dénombrable algorithmique mans pour mieux comprendre cette subtilité il est utile de s'attarder sur le cadre des mathématiques dite constructive par opposition aux mathématiques classique avec ses histoires de différentes tailles d'infini notamment en fait en maths constructive ces notions de taille d'infini n'ont pas de sens et donc les intuitions dont on s'en fait via la théorie des ensembles sont en fait contre productive en maths constructive comme en mathématiques classique il existe des ensembles dénombrable c'est-à-dire lee stable mais en maths constructive ça veut dire qu'il existe une façon de lister les éléments de cet ensemble de manière algorithmique un exemple de tels ensembles dénombrable l ensemble de tous les codes algorithmique cet ensemble est bien lisse table de manière algorithmique cependant là où les choses deviennent un peu bizarre pour un ensemble liste c'est quand matt constructive il est tout à fait possible qu'un sous-ensemble d'un ensemble dénombrable ne soit pas lui-même dénombrable dans le sens où il n'est pas possible de construire une liste des éléments de ce sous ensemble et c'est justement le cas de l'ensemble des codes algorithmique dont l'exécution termine toujours ce sous-ensemble des code algorithmique lui bizarrement n'est pas dénombrable de manière constructive et c'est là que réside la faille de l'argument pro lapin elle réside dans une faille des maths non constructives qui du coup ne décrit pas ce qui peut être fait en tout cas dans un monde régi par la thèse de church curie mais alors à moins de pouvoir écarter complètement la thèse du flirt sur ring ce que les observations empiriques actuels ne semblent pas permettre dire que les mathématiques usuels sont les fondements du savoir c'est peut-être aller bien trop vite en besogne peut-être qu'il ya quelque chose de plus fondamental encore comme peut-être machine de turing est comme peut être aussi les lois des probabilités